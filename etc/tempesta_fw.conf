#
# Tempesta FW configuration file.
# 

# TAG: cache
#
# Boolean value to enable or disable Web content caching.
# It can be useful to switch caching off to run Tempesta on the same host as
# protected HTTP accelerator.
#
# Syntax:
#   cache on | off
#
# Default:
#   cache off;


# TAG: cache_dir
#
# Path to a directory used as a storage for Tempesta FW Web cache.
#
# Syntax:
#   cache_dir PATH
#
# The PATH must be absolute and the directory must exist.
# Also, the PATH should not end with a slash (e.g. "/foo/bar/").
#
# Spaces and other special characters must be escaped with a backslash.
# Alternatively, the whole path may be enclosed to double quotes.
# For example:
#   cache_dir /var/foo\ bar\ baz;
#   cache_dir "/var/weird !;% name";
#
# Default:
#   cache_dir /opt/tempesta/cache;


# TAG: cache_size
#
# Size of file(s) created by Tempesta FW within cache_dir.
#
# Syntax:
#   cache_size SIZE
#
# SIZE is specified in bytes, suffixes like 'MB' are not supported yet.
# Also, the number must be a multiple of 4096 (page size).
#
# Examples:
#   cache_size 65536;   # 64 MiB
#   cache_size 1048576; # 1 GiB
#
# Default:
#   cache_size 262144;  # 256 MiB


# TAG: listen
# 
# Tempesta FW listening address.
#
# Syntax:
#   listen PORT | IPADDR[:PORT]
#
# IPADDR may be either an IPv4 or IPv6 address, hostnames are not allowed.
# IPv6 address must be enclosed in square brackets (e.g. "[::0]" but not "::0").
#
# If only PORT is given, then the address 0.0.0.0 (but not [::1]) is used.
# If only IPADDR is given, then the default HTTP port 80 is used.
#
# Tempesta FW opens one socket for each 'listen' entry, so it may be repeated
# to listen on multiple addresses/ports. For example:
#   listen 80;
#   listen [::0]:80;
#   listen 127.0.0.1:8001;
#   listen [::1]:8001;
#
# Default:
#   listen 80;


# TAG: backend
#
# Address of a back-end HTTP server.
#
# Syntax:
#   backend IPADDR[:PORT] [conns_n=N]
#
# IPADDR may be either IPv4 or IPv6 address, hostnames are not allowed.
# IPv6 address must be enclosed in square brackets (e.g. "[::0]" but not "::0").
# PORT defaults to 80 if not set.
#
# conns_n=N is the number of parallel connections to the server.
# The N defaults to 4 if not set.
#
# Multiple back-end servers may be specified, for example:
#   backend 10.1.0.1:80
#   backend [fc00::1]:80;
#
# Default:
#   backend 127.0.0.1:8080 conns_n=4;


# TAG: backend_group
#
# Groups multiple backends into a single unit of load balancing.
# All backend servers within a group are treated as interchangeable.
# The load is distributed evenly over all servers within a single group.
# If some server goes offline, other members of the group take its load.
#
# Syntax:
#   backend_group NAME {
#       backend IPADDR[:PORT] [conns_n=N];
#       ...
#   }
#
# NAME is a unique identifier of the group that may be used to refer it later.
#
# IPADDR[:PORT] is the IPv4 or IPv6 address of the server (see: backend).
# conns_n=N is the number of parallel connections to the server (see: backend).
#
# Examples:
#   backend_group static_storage {
#       backend 10.10.0.1:8080;
#       backend 10.10.0.2:8080;
#       backend [fc00::3]:8081 conns_n=1;
#   }
#
# Default:
#   There is a special group called "default". All "backend" entries defined
#   outside a "backend_group" added to the default group implicitly.


# TAG: backend_lb_rules
#
# A section containing content-based load balancing rules.
# It allows to instruct the load balancer to send HTTP requests to a group
# of servers based on a HTTP request field: URI, Host, headers, etc.
#
# Syntax:
#   backend_lb_rules {
#       match GROUP FIELD OP ARG;
#       ...
#   }
#
# GROUP is the reference to a previously defined 'backend_group'.
# FIELD is a HTTP request field (uri, host, etc).
# OP is a string comparison operator (eq, prefix, etc).
# ARG is an argument for the operator ("/foo/bar.html", "example.com", etc)
#
# A "match" entry is a single instruction for the load balancer that says:
#   take the FIELD of http request, compare it with ARG using OP,
#   and if they match, then send the request to the specified GROUP.
#
# For every HTTP request, the load balancer executes all the "match"
# instructions sequentially until there is a match.
# If there is no match, the request is sent to the group called "default"
# that contains all backends defined outside any "backend_group".
# Finally, if there is no servers in the "default" group or all servers are
# offline, the request is dropped.
#
# Supported FIELD keywords:
#  - uri
#      Actually only a part of URI containing the path and the query string
#      (e.g. "/abs/path.html?query&key=val#fragment").
#  - host
#      The host part from URI in HTTP request line, or the value of Host header.
#      Host in URI takes priority over the Host header value.
#  - hdr_host
#      The "Host" header value only.
#  - hdr_conn
#      The "Connection" header value.
#  - hdr_raw
#      Any other header whose name is specified by the ARG, like this:
#         rule group hdr_raw eq     "X-Forwarded-For: 127.0.0.1";
#         rule group hdr_raw prefix "User-Agent: Bot";
#      Only hdr_raw requires the name, other headers require only a value to be
#      specified in the ATG. Also, hdr_raw may be slow because it walks over
#      all headers of a HTTP request.
#
# Supported OP keywords (comparison operations):
#  - eq - FIELD is fully equal to the PATTERN string.
#  - prefix - FIELD starts with PATTERN.
# Actually each FIELD may implement its own set of operators, but currently they
# all use same case-insensitive string comparison operations.
#
# Example:
#   backend_group static { ... }
#   backend_group foo_app { ... }
#   backend_group bar_app { ... }
# 
#   backend_lb_rules {
#       match static   uri       prefix  "/static";
#       match static   host      prefix  "static.";
#       match foo_app  host      eq      "foo.example.com";
#       match bar_app  hdr_conn  eq      "keep-alive";
#       match bar_app  hdr_host  prefix  "bar.";
#       match bar_app  hdr_raw   prefix  "X-Custom-Bar-Hdr: ";
#   }
#
# Default:
#   No rules defined. All HTTP requests are routed to the "default" group.
